name: BuildBase
#run-name: ${{ github.actor }} is building base image
#
on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '30 2 * * 2,6'
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - ubuntu: 22.04one
            cuda: 12.1.0-cudnn8
          #- ubuntu: 22.04one
          #  cuda: 12.1.1-cudnn8
          #- ubuntu: 22.04one
          #  cuda: 12.2.2-cudnn8
          #- ubuntu: 22.04one
          #  cuda: 12.3.2-cudnn9
          #- ubuntu: 22.04one
          #  cuda: 12.4.1-cudnn
          #- ubuntu: 22.04one
          #  cuda: 12.5.1-cudnn
          #- ubuntu: 22.04one
          #  cuda: 12.6.3-cudnn
          #- ubuntu: 22.04one
          #  cuda: 12.8.1-cudnn
          #- ubuntu: 24.04one
          #  cuda: 12.6.3-cudnn
          #- ubuntu: 24.04one
          #  cuda: 12.8.1-cudnn
          - ubuntu: 20.04
            cuda: none
          - ubuntu: 22.04
            cuda: none
          - ubuntu: 24.04
            cuda: none
          - ubuntu: 22.04one
            cuda: none
          - ubuntu: 24.04one
            cuda: none
    runs-on: self-hosted
    env:
      IMAGE_NAME: irsl_base
#      DOCKER_LOCAL: ghcr.io/
#      DOCKER_LOCAL: repo.irsl.eiiris.tut.ac.jp/
      DOCKER_DEPLOY: repo.irsl.eiiris.tut.ac.jp/
    steps:
      - name: Check Version
        run: |
          if   [ ${{ matrix.ubuntu }} == 24.04one ]; then
            echo "ROS_DISTRO=one" >> $GITHUB_ENV
            echo "UBUNTU_VER=24.04" >> $GITHUB_ENV
          elif [ ${{ matrix.ubuntu }} == 24.04rolling ]; then
            echo "ROS_DISTRO=rolling" >> $GITHUB_ENV
            echo "UBUNTU_VER=24.04" >> $GITHUB_ENV
          elif [ ${{ matrix.ubuntu }} == 24.04 ]; then
            echo "ROS_DISTRO=jazzy" >> $GITHUB_ENV
            echo "UBUNTU_VER=24.04" >> $GITHUB_ENV
          elif [ ${{ matrix.ubuntu }} == 22.04one ]; then
            echo "ROS_DISTRO=one" >> $GITHUB_ENV
            echo "UBUNTU_VER=22.04" >> $GITHUB_ENV
          elif [ ${{ matrix.ubuntu }} == 22.04 ]; then
            echo "ROS_DISTRO=humble" >> $GITHUB_ENV
            echo "UBUNTU_VER=22.04" >> $GITHUB_ENV
          elif [ ${{ matrix.ubuntu }} == 20.04 ]; then
            echo "ROS_DISTRO=noetic" >> $GITHUB_ENV
            echo "UBUNTU_VER=20.04" >> $GITHUB_ENV
          elif [ ${{ matrix.ubuntu }} == 18.04 ]; then
            echo "ROS_DISTRO=melodic" >> $GITHUB_ENV
            echo "UBUNTU_VER=18.04" >> $GITHUB_ENV
          else
            echo "ROS_DISTRO=none" >> $GITHUB_ENV
          fi
      - name: Make Build Scequence(Cuda)
        if: ${{ matrix.cuda != 'none' }}
        run: |
          echo "DOCKER_FILES=Dockerfile.add_glvnd Dockerfile.add_virtualgl Dockerfile.add_${ROS_DISTRO} Dockerfile.add_vcs Dockerfile.add_entrypoint" >> $GITHUB_ENV
          echo "INPUT_IMAGE=nvidia/cuda:${{ matrix.cuda }}-devel-ubuntu${UBUNTU_VER}" >> $GITHUB_ENV
          echo "OUTPUT_IMAGE=${{ env.DOCKER_DEPLOY }}${{ env.IMAGE_NAME }}:cuda_${{ matrix.cuda }}-devel-ubuntu${UBUNTU_VER}_${ROS_DISTRO}" >> $GITHUB_ENV
          echo "PULL=yes" >> $GITHUB_ENV
      - name: Make Build Scequence
        if: ${{ matrix.cuda == 'none' }}
        run: |
          if  [ ${{ env.ROS_DISTRO }} == "one" ]; then
            echo "DOCKER_FILES=Dockerfile.add_glvnd Dockerfile.add_virtualgl Dockerfile.add_one Dockerfile.add_vcs Dockerfile.add_entrypoint" >> $GITHUB_ENV
            echo "INPUT_IMAGE=ubuntu:${UBUNTU_VER}" >> $GITHUB_ENV
          else
            echo "DOCKER_FILES=Dockerfile.add_glvnd Dockerfile.add_virtualgl Dockerfile.add_vcs Dockerfile.add_entrypoint" >> $GITHUB_ENV
            echo "INPUT_IMAGE=ros:${{ env.ROS_DISTRO }}-ros-base" >> $GITHUB_ENV
          fi
          echo "OUTPUT_IMAGE=${{ env.DOCKER_DEPLOY }}${{ env.IMAGE_NAME }}:opengl_${UBUNTU_VER}_${ROS_DISTRO}" >> $GITHUB_ENV
          echo "PULL=yes" >> $GITHUB_ENV
      - name: Check out repository code(src)
        uses: actions/checkout@v3
      - name: Sequence Build
        run: >
          ./build_sequential.sh ${{ env.DOCKER_FILES }}
      - name: Deploy
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker push ${{ env.OUTPUT_IMAGE }}
##
# Base
# INPUT_IMAGE  ros:<ros>-ros-base
# OUTPUT_IMAGE irsl_base:opengl_<ubuntu>_<ros>
# Base <one> ( use Dockerfile.add_one )
# INPUT_IMAGE  ubuntu:<ubuntu>
# OUTPUT_IMAGE irsl_base:opengl_<ubuntu>_one
##
# With CUDA ( use Dockerfile.add_<ros> )
# INPUT_IMAGE  nvidia/cuda:<cuda>-devel-ubuntu<ubuntu>
# OUTPUT_IMAGE irsl_base:cuda_<cuda>-devel-ubuntu<ubuntu>_<ros>

## Base
# INPUT_IMAGE=ubuntu:24.04 OUTPUT_IMAGE=irsl_base:opengl_24.04_one ./build_sequential.sh Dockerfile.add_glvnd Dockerfile.add_virtualgl Dockerfile.add_one Dockerfile.add_vcs Dockerfile.add_entrypoint
# INPUT_IMAGE=ubuntu:22.04 OUTPUT_IMAGE=irsl_base:opengl_22.04_one ./build_sequential.sh Dockerfile.add_glvnd Dockerfile.add_virtualgl Dockerfile.add_one Dockerfile.add_vcs Dockerfile.add_entrypoint
# INPUT_IMAGE=ros:noetic-ros-base OUTPUT_IMAGE=irsl_base:opengl_20.04_noetic ./build_sequential.sh Dockerfile.add_glvnd Dockerfile.add_virtualgl Dockerfile.add_vcs Dockerfile.add_entrypoint
# INPUT_IMAGE=ros:humble-ros-base OUTPUT_IMAGE=irsl_base:opengl_22.04_humble ./build_sequential.sh Dockerfile.add_glvnd Dockerfile.add_virtualgl Dockerfile.add_vcs Dockerfile.add_entrypoint
# INPUT_IMAGE=ros:jazzy-ros-base OUTPUT_IMAGE=irsl_base:opengl_22.04_jazzy ./build_sequential.sh Dockerfile.add_glvnd Dockerfile.add_virtualgl Dockerfile.add_vcs Dockerfile.add_entrypoint
